/*****************************************************************
	KROKI Web Application Flat UI - JavaScript implementation
	
	Author: Milorad Filipovic [mfili@uns.ac.rs]
	Copyrigth (c) 2014 KROKI Team, 
					   Chair of Informatics
					   Faculty of Technical Sciences
					   Novi Sad, Serbia
	
	https://github.com/KROKIteam
*****************************************************************/
$(document).ready(function(e) {
	
	//form (div.forms) that is currently being dragged
	var dragged = null;
	//offsets for dragging forms
	var ox = 0;
	var oy = 0;
	//remember username so it can be switched with logout text
	var username = $("#logoutLink").text();
	//if the username is shorter than the word "Logout", keep the minimal width of the link
	if(username.length < 6) {
		$("#logoutLink").outerWidth(88);
	}

	//delete dummy text generated by KROKI menu generator for empty divs
	$(".arrow-down").empty();
	$(".arrow-right").empty();
	
	/**************************************************************************************************************************
													   															   MENU EFFECTS
	**************************************************************************************************************************/
	//PAGE LOAD ANIMATION
	//Slide down the navigation
	$("nav").slideDown("slow", function() {
		$("#mainMenu").fadeIn("fast", function() {
			$("#logoutDiv").fadeIn("slow");
		});
	});
	
	//MAKE MAIN MENU ITEMS INVERT COLORS ON MOUSE HOVER
	$(".menu").hover(function(e) {
		if(!$(this).parent().find("ul.L1SubMenu").is(":visible")) {
			$(this).parent().addClass("hover");
		}
	}, function(e) {
		if(!$(this).parent().find("ul.L1SubMenu").is(":visible")) {
			$(this).parent().removeClass("hover");	
		}
	});
	
	//OPEN SUBMENU ON CLICK
	// $(".menu") is a <div> within main menu list elements which contains text and down arrow
	// so getting parent of $(".menu") we get the actual <li> element
	$(".menu").click(function(e) {
		//if corresponding submenu is not allready open, open it while closing all other submenus
		if(!$(this).parent().find("ul.L1SubMenu").is(":visible")) {
			$(".menu").each(function(index, element) {
            	$(this).parent().removeClass("hover");
				$(this).parent().find("ul.L1SubMenu").hide();
				$(this).parent().find("ul.L2SubMenu").hide();
        	});
			$(this).parent().addClass("hover");
			$(this).parent().find("ul.L1SubMenu").show();
		}else {
			//if a submenu is open, just close it on click
			$(this).parent().addClass("hover");
			$(this).parent().find("ul.L1SubMenu").toggle();
		}
    });
	
	//INVERT SUBMENU ITEMS COLORS ON MOUSE HOVER
	$("li.subMenuItem").hover(function(e) {
		e.stopPropagation();
		$(this).addClass("hover-li");
		$(this).find("span").addClass("arrow-right-hover");
	}, function(e) {
		e.stopPropagation();
		$(this).removeClass("hover-li");
		$(this).find("span").removeClass("arrow-right-hover");
	});
	
	//SHOW HIGHER LEVEL SUBMENUS ON CLICK
	$(".subMenuLink").click(function(e) {
		e.stopPropagation();
		// if submenu is not visible, click opens it
		if(!$(this).find("ul.L2SubMenu").is(":visible")) {
			// first close all others
				$(this).parent().find("ul.L2SubMenu").each(function(index, element) {
				$(this).hide();
			});
			$(this).children("ul.L2SubMenu").first().show();
		}else {
			//if submenu is allready opened, it is closed on click
			$(this).children("ul.L2SubMenu").first().hide();
		}
		
    });
	
	//SHOW "LOGOUT" TEXT WHEN HOVERING OVER USERNAME
	$("#logoutLink").hover(function() {
			//keep original width if username is longer than "Logout" so link doesn't shrink
			if(username.length > 6) {
				$(this).outerWidth($(this).outerWidth())
			}
			$(this).text("Logout");
		}, function(){
			$(this).text(username);
		});
	
	/**************************************************************************************************************************
													   															   FORM EFFECTS
	**************************************************************************************************************************/
	
	//CREATE FORM <DIV> ON MENU ITEM CLICK
	$("li.subMenuItem").click(function(e) {
        if(!$(this).hasClass("subMenuLink")) {
			// Hide all the submenus
			$(".L1SubMenu").each(function(index, element) {
                $(this).hide();
            });
			// Return the main menu color to inital values
			$("li.mainMenuItems").each(function(index, element) {
				$(this).removeClass("hover");
			});
			makeNewForm($(this).text());
		}
    });
	
	//FOCUS FORM ON CLICK
	$("#container").on("click", ".forms", function() {
		focus($(this));
	});
	
	//CLOSE FORM ON 'X' BUTTON CLICK
	$("#container").on("click", ".headerButtons", function(e) {
		e.stopPropagation();
		$(this).parent().parent().remove();
		delete $(this).parent().parent();
	});
	
	//FUNCTION THAT CREATES HTML FORMS
	function makeNewForm(name) {
		/*
		var newForm = $(document.createElement("div"));
		newForm.addClass("forms");
		var newHeader = $(document.createElement("div"));
		newHeader.addClass("formHeaders");
		var newHeaderName = $(document.createElement("div"));
		newHeaderName.addClass("formName");
		newHeaderName.text(name);
		var newFormButton = $(document.createElement("div"));
		newFormButton.addClass("headerButtons");
		newFormButton.html("&#10006;");
		newFormButton.attr("title", "Close form");
		newHeader.append(newHeaderName);
		newHeader.append(newFormButton);
		newForm.append(newHeader);
		var newContent = $(document.createElement("div"));
		newContent.addClass("formBody");
		newForm.append(newContent);
		$("#container").append(newForm);
		
		focus(newForm);
		*/
		var newForm = $("#formaPrimer").clone().appendTo("#container");
		newForm.find(".formName").text(name);
		newForm.show();
		focus(newForm);
	}
	
	// Form is focused by applying 'focused' css class
	// which adds drop-shadow effect to it and puts the form in front of the others.
	// Only one form can be focused at a time.
	function focus(form) {
		$(".forms").each(function(index, element) {
			$(this).removeClass("focused");
			$(this).addClass("unfocused");
		});
		form.removeClass("unfocused");
		form.addClass("focused");
	}
	
	//DRAG FORMS WHEN DRAGGING HEADERS

	// mousedown on .formheaders - make current form draggable
	$("#container").on("mousedown", ".formHeaders", function(e) {
		dragged = $(this).parent();
		focus(dragged);
		//coordinates of a mouse
		var ex = e.pageX;
		var ey = e.pageY;
		//coordinates of the form
		var position = dragged.position();
		var fx = position.left;
		var fy = position.top;
		//offsets of these coordinates
		ox = ex - fx;
		oy = ey - fy;
		//offsets are calculated here to avoid calculation on mouse move
		//since the offsets stay the same during the dragging process
	});
	
	// mouseup on .formheaders - stop dragging forms
	$("#container").on("mouseup", ".formHeaders", function() {
		dragged = null;
	});
	
	$("#container").mousemove(function(e) {
		if(dragged != null) {
			var ex = e.pageX;
			var ey = e.pageY;
			dragged.offset({
				left: ex - ox,
				top: ey - oy
			});
		}
	});
	
	/**************************************************************************************************************************
													   															 TABLE EFFECTS
	**************************************************************************************************************************/
	
	// SELECT TABLE ROWS ON MOUSE CLICK
	// Only one row can be selected at a time
	$("#container").on("click", ".mainTable tbody tr", function() {
		$(this).parent().find("tr").removeClass("selectedTr");
		$(this).addClass("selectedTr");
	});
	
	// FIRST, LAST, PREVIOUS AND NEXT BUTTONS IMPLEMENTATIONS
	
	$("#container").on("click", "#btnFirst", function(e) {
		var tableDiv = $(this).closest("div.tableDiv");
		var firstTR = tableDiv.find(".mainTable tbody tr:first-child");
		tableDiv.find(".mainTable tbody tr").removeClass("selectedTr");
		//select first element
		firstTR.addClass("selectedTr");
		//scroll to top
		tableDiv.find(".tablePanel").scrollTop(0);
	});
	
	$("#container").on("click", "#btnPrev", function(e) {
		var tableDiv = $(this).closest("div.tableDiv");
		var tablePanel = tableDiv.find(".tablePanel");
		var selectedRow = tableDiv.find(".mainTable tbody tr.selectedTr");
		
		if(selectedRow.length > 0) {
			if(selectedRow.prev().length > 0) {
				var position = selectedRow.prev().position();
				selectedRow.removeClass("selectedTr");
				selectedRow.prev().addClass("selectedTr");
				//detect whent the selected row gets out of the view port, and scroll so it gets on top
				if(position.top < tablePanel.position().top) {
					tablePanel.scrollTop((selectedRow.next().index()-2) * selectedRow.next().outerHeight());
				}
			}
		}
	});
	
	$("#container").on("click", "#btnNext", function(e) {
		var tableDiv = $(this).closest("div.tableDiv");
		var tablePanel = tableDiv.find(".tablePanel");
		var selectedRow = tableDiv.find(".mainTable tbody tr.selectedTr");
		if(selectedRow.length > 0) {
			if(selectedRow.next().length > 0) {
				var position = selectedRow.next().position();
				selectedRow.removeClass("selectedTr");
				selectedRow.next().addClass("selectedTr");
				//detect whent the selected row gets out of the view port, and scroll so it gets on top
				if((position.top + selectedRow.next().outerHeight()) > (tablePanel.position().top + tablePanel.outerHeight()) ) {
					tablePanel.scrollTop((selectedRow.next().index()+2) * selectedRow.next().outerHeight());
				}
			}
		}
	});
	
	$("#container").on("click", "#btnLast", function(e) {
		var tableDiv = $(this).closest("div.tableDiv");
		var lastTR = tableDiv.find(".mainTable tbody tr:last-child");
		tableDiv.find(".mainTable tbody tr").removeClass("selectedTr");
		//select last element
		lastTR.addClass("selectedTr");
		//scroll to bottom
		var position = lastTR.position();
		tableDiv.find(".tablePanel").scrollTop(position.top);
	});
	
});